(          $components := $.components;
          $links:= $components.$spread().{              "src_id": $keys()[0],
              "src": $.*          }[$exists($lookup({"system":{}, "actor": {}, "database": {}}, src.entity))].(
              $src_id:= src_id;              src.links.({
                "src": $src_id,                "dst": $.id,
                "direction": $.direction,                "title": $.title
              })          );
          $srcs := $distinct($links.(
            $.src          ));
          $links := $srcs.(            $src_id := $;
            $dsts := $distinct($links[src=$src_id].(dst));            $dsts.(
                $dst_id := $;                $titles := $append([], $links[src=$src_id and dst=$dst_id].(
                    $.title                ));
                {                    "src": $src_id,
                    "dst": $dst_id,                    "title": $titles,
                    "direction": ($links[src=$src_id and dst=$dst_id and (direction = "<-->" or direction = "<--")] ? "<" : "-") &                                 "-" &
                                ($links[src=$src_id and dst=$dst_id and (direction = "<-->" or direction = "-->")] ? ">" : "-")                } 
            )             );
          $map:= $mergedeep($links.({            $.src & "#" & $.dst : $
          }));          $dublicates:= $distinct($map.$spread().{
            "link": $.*          }.(
            $exists($lookup($map, link.dst & "#" & link.src)) ? ($join($sort([link.src, link.dst]),"#"))          ));
          $links := $links.(            $.src & "#" & $.dst in $dublicates ? (
                $remote := $lookup($map,  $.dst & "#" & $.src);                $titles := $append($.title, $remote.title);
                {                    "src": $.src,
                    "dst": $.dst,                    "title": $count($titles) > 1 ? (
                                        "[[/docs/arch.tech.flows.group?flow=" & $join($titles, ",") & " #]]"                                    ):(
                                        "[[/docs/arch.tech.flows.single?flow=" & $titles[0] & " " & $titles[0] & "]]"                                    ),
                    "direction": (($remote.direction = "<-->" or $remote.direction = "-->" or $.direction = "<-->" or $.direction = "<--") ? "<" : "-") &                                  "-" &
                                  (($remote.direction = "<-->" or $remote.direction = "<--" or $.direction = "<-->" or $.direction = "-->") ? ">" : "-")            }) : (
                $not($.dst & "#" & $.src in $dublicates) ? (                    $merge ([$, 
                    {                        "title": $count($.title) > 1 ? (
                                    "[[/docs/arch.tech.flows.group?flow=" & $join($.title, ",") & " #]]"                                  ):(
                                    "[[/docs/arch.tech.flows.single?flow=" & $.title[0] & " " & $.title[0] & "]]"                                  )
                    }                    ]);
                )            )
          );          $components := $mergedeep($components.$spread().{
              "src_id": $keys()[0],              "src": $.*
          }.(            $exists($lookup({"system":{}, "actor": {}, "database": {}}, src.entity)) and $exists(src.links) ? (
                { src_id: $merge([src, { "links" : []}])}            ):(
                { src_id: src}            )
          ));
          $srcs := $distinct($links.(            $.src
          ));          $links := $mergedeep($srcs.(
            $id := $;            {
                $id : {                    "links": $append([],$links[src = $id].(
                            {                                "id": $.dst,
                                "title": $.title,                                "direction": $.direction
                            }                      ))
                }            }
          ));          $merge([$, {"components": $mergedeep([$components, $links])}]);
)