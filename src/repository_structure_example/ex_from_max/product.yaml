contexts:
  arch.products.details:
    source: arch.levels.l1
    api:
      tags:
        product:
          $bgColor: LimeGreen
      fetchTitle: >
        (
          $lookup(manifest.products, componentId).title
        )
      fetchComponents: >
        (
          $p_id := $params.componentId;
          $manifest := $params.manifest;
          $product := $append([], $manifest.components.$spread().{
                  "id": $keys()[0],
                  "component": $.*
              }.(
                  $exists(component.products) and $p_id in component.products ? (
                      id
                  ) 
              ));
              $merge($manifest.components.$spread().{
                  "id": $keys()[0],
                  "component": $.*
              }[id in $distinct($append($append($manifest.components.$spread().{
                      "c_id": $keys()[0],
                      "component": $.*
                  }.(
                      $exists(component.entity) and component.entity in ["system", "database", "actor"] ? (
                          component.links[id in $product] ? (
                              c_id
                          )
                      )
                  ),
                  $product.(
                      $lookup($manifest.components, $).links.(
                          $.id
                      )
                  )
              ), $product))].(
                  { 
                    id : id in $product ? (
                        $merge([
                          component,
                          { "tags" : ["product"]}
                        ])
                      ) : (component) 
                  }
              ))
        )
            
        
