
# Здесь можно подключить репозитории архитектуры
imports:
 - back.yaml                                     # или по относительному пути
 - front.yaml
# Это аспекты. Аспекты - аналитические маркеры, позволяющие выделять
# сегменты архитектуры. Кликни на лупе слева и посмотри как они помогают
# найти то, что нужно.

# Архитектурные компоненты. Из них строится ИТ архитектура.
components:

  # Компоненты верхнего уровня (L1 C4Model)
  worker:                       # Идентификатор компонента
    title: Диспетчер       # Название
    entity: actor             # Представление на схеме
    links:                    # Компоненты, с которыми происходит взаимодействие
      - id: system            # Идентификатор компонента
        direction: <-->       # Направление взаимодействия (<-- | -- | --> | <-->)
        title: Управление курьерами        # Смысл взаимодействия
  courier:                       # Идентификатор компонента
    title: Курьер       # Название
    entity: actor             # Представление на схеме
    links:                    # Компоненты, с которыми происходит взаимодействие
      - id: system            # Идентификатор компонента
        direction: <-->       # Направление взаимодействия (<-- | -- | --> | <-->)
        title: Выполенние доставок/сборов       # Смысл взаимодействия
  an_system:
    title: Сервисы агентской сети
    entity: collections

  an_system.fps:
    title: FPS
    entity: component
  an_system.bless:
    title: BLESS
    entity: component
  an_system.adapter:
    title: Adapter
    entity: component

  lsd_system:
    title: LSD
    entity: collections
    links:
      - id: an_system.adapter
        direction: <-->
        title: Получение заданий \nОтчет о результатах
      - id: an_system.fps
        direction: <-->
        title: Формирование \nдокументов
      - id: an_system.bless
        direction: <-->
        title: Запись лога \nи получение истории \nлог сущностей
    aspects:                  # Аспекты, которые реализует компонент
      - auth
      - pickup
      - delivery

  lsd_system.auth:
    title: Авторизация
    entity: component
    aspects:
      - auth
    links:
      - id: lsd_system.db
        direction: <-->
    technologies:
      - PHP
      - OAuth

  lsd_system.db:
    title: Хранилище
    entity: database
  lsd_system.db.business:
    title: Данные
    entity: database
    technologies:
      - PostgreSQL
  lsd_system.db.users:
    title: Пользователи
    entity: database
    technologies:
      - PostgreSQL

# Диаграммы представлений
contexts:
  an_system:                     # Архитектура системы (L2 C4Model)
    title: Внешние интеграции
    location: LSD/Integration
    components:
      - an_system.*
      - lsd_system
  lsd_system:                     # Архитектура системы (L2 C4Model)
    title: Устройство системы
    location: LSD/System
    components:
      - lsd_system.*              # Можно указать wildcard включаемых компонентов в диаграмму


# Документы
docs:
  example:
    location: Пример документа  # Размещение в меню
    # Ссылка может быть как на внешний ресурс, так на файл по относительному пути
    source: docs/api/api.yaml
    type: openapi               # Тип документа (OpenApi | Markdown | PlantUML | Table)

# Описание технологического стека
technologies:
  sections:                           # Определение разделов стека
    languages:                         # Идентификатор раздела
      title: Языки программирования   # Название раздела
    frameworks:
      title: Фреймворки
    databases:
      title: Базы данных
    storages:
      title: Хранилища
    protocols:
      title: Протоколы
  items:                              # Перечисление технологий
    PHP:                              # Идентификатор технологии
      aliases:                        # Синонимы технологии
        - пыха
      title: Супер-крутой язык программирования   # Название технологии
      link: https://www.php.net/                  # Ссылка на документацию
      section: languages              # Идентификатор секции технологии
      status: adopt                   # Статус технологии adopt / trial / assess / hold
    Go:
      title: Go
      link: https://go.dev/
      section: languages
      status: trial
    Laravel:
      title: Laravel
      link: https://laravel.ru/
      section: frameworks
      status: trial
    PostgreSQL:
      title: PostgreSQL
      link: https://www.postgresql.org/
      section: databases
      status: assess
    HTTP:
      title: HTTP
      link: https://ru.wikipedia.org/wiki/HTTP
      section: protocols
      status: adopt
    OAuth:
      title: OAuth
      link: https://ru.wikipedia.org/wiki/OAuth
      section: protocols
      status: adopt

#******************************************************************************
#                          Теперь ты почти все знаешь!
#                    подробности на сайте https://dochub.info
#    Если появятся вопросы, нужна будет помощь или ты захочешь сделать свой
#           вклад в проект иди сюда - https://github.com/RabotaRu/DocHub
#******************************************************************************